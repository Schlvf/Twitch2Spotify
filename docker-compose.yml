services:
  # Redis service for the grimm-api
  grimm-redis:
    image: redis:7.4.2-bookworm
    container_name: grimm-redis
    command: redis-server --save 300 1 --loglevel warning --port 6379
    restart: unless-stopped
    volumes:
      - cache:/data
    networks:
      - grimm-network
    env_file:
      - .env

  # Main API service, dependent on Redis
  grimm-api:
    build: .
    container_name: grimm-api
    restart: always
    depends_on:
      - grimm-redis
    networks:
      - grimm-network
    env_file:
      - .env

  # Volume ownership fix (important for Zrok container's permissions)
  zrok-init:
    image: busybox
    command: chown -Rc 2171:2171 /mnt/
    container_name: zrok-init
    user: root
    volumes:
      - zrok_env:/mnt
    networks:
      - grimm-network
    env_file:
      - .env
    profiles:
      - zrok

  # Enable Zrok environment (auth/enable step)
  zrok-enable:
    image: openziti/zrok:latest  # Use the latest version of the Zrok image
    entrypoint: zrok-enable.bash
    container_name: zrok-enable
    depends_on:
      zrok-init:
        condition: service_completed_successfully
    volumes:
      - zrok_env:/mnt
    environment:
      HOME: /mnt
    networks:
      - grimm-network
    env_file:
      - .env
    profiles:
      - zrok

  # Zrok tunnel service (exposed to the web)
  zrok-share:
    image: openziti/zrok:latest  # Use the latest version of the Zrok image
    container_name: zrok-share
    entrypoint: zrok-share.bash
    restart: unless-stopped
    depends_on:
      zrok-enable:
        condition: service_completed_successfully
    volumes:
      - zrok_env:/mnt
    environment:
      HOME: /mnt
      ZROK_TARGET: "http://grimm-api:${PORT}"
      PFXLOG_NO_JSON: "true"
    networks:
      - grimm-network
    env_file:
      - .env
    profiles:
      - zrok

volumes:
  zrok_env:
  cache:
    driver: local

networks:
  grimm-network:
    driver: bridge
